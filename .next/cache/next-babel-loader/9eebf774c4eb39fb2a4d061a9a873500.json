{"ast":null,"code":"import * as firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDSLjDcA6IfXh7o9xLaSYNT6XH08euolP8\",\n  authDomain: \"react-f137b.firebaseapp.com\",\n  databaseURL: \"https://react-f137b.firebaseio.com\",\n  projectId: \"react-f137b\",\n  storageBucket: \"react-f137b.appspot.com\",\n  messagingSenderId: \"1087052118047\",\n  appId: \"1:1087052118047:web:c80e68ce39b19a1c3bbd2a\"\n};\n!firebase.apps.length && firebase.initializeApp(firebaseConfig); //verify \n\nvar db = firebase.firestore();\n\nvar mapUserFromFirebaseAuthToUser = function mapUserFromFirebaseAuthToUser(user) {\n  var displayName = user.displayName,\n      email = user.email,\n      photoURL = user.photoURL,\n      uid = user.uid;\n  return {\n    avatar: photoURL,\n    username: displayName,\n    email: email,\n    uid: uid\n  };\n};\n\nexport var onAuthStateChanged = function onAuthStateChanged(onChange) {\n  return firebase.auth().onAuthStateChanged(function (user) {\n    var normalizedUser = user ? mapUserFromFirebaseAuthToUser(user) : null;\n    onChange(normalizedUser);\n  });\n};\nexport var loginWithGitHub = function loginWithGitHub() {\n  var githubProvider = new firebase.auth.GithubAuthProvider();\n  return firebase.auth().signInWithPopup(githubProvider);\n};\nexport var addDevid = function addDevid(_ref) {\n  var avatar = _ref.avatar,\n      uid = _ref.uid,\n      message = _ref.message,\n      username = _ref.username;\n  console.log(avatar, uid, message, username);\n  return db.collection('devits').add({\n    avatar: avatar,\n    uid: uid,\n    message: message,\n    username: username,\n    createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n    likeCount: 0,\n    sharedCount: 0\n  }).then(function (res) {\n    return console.log(\"documento saved\");\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/lnardev/Documentos/devter/firebase/client.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","db","firestore","mapUserFromFirebaseAuthToUser","user","displayName","email","photoURL","uid","avatar","username","onAuthStateChanged","onChange","auth","normalizedUser","loginWithGitHub","githubProvider","GithubAuthProvider","signInWithPopup","addDevid","message","console","log","collection","add","createdAt","Timestamp","fromDate","Date","likeCount","sharedCount","then","res","err"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,WAAW,EAAE,oCAHM;AAInBC,EAAAA,SAAS,EAAE,aAJQ;AAKnBC,EAAAA,aAAa,EAAE,yBALI;AAMnBC,EAAAA,iBAAiB,EAAE,eANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;AAWA,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAf,IAAyBV,QAAQ,CAACW,aAAT,CAAuBV,cAAvB,CAAzB,C,CAA+D;;AAC/D,IAAMW,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;;AACG,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,IAAD,EAAU;AAAA,MACzCC,WADyC,GACJD,IADI,CACzCC,WADyC;AAAA,MAC5BC,KAD4B,GACJF,IADI,CAC5BE,KAD4B;AAAA,MACrBC,QADqB,GACJH,IADI,CACrBG,QADqB;AAAA,MACZC,GADY,GACJJ,IADI,CACZI,GADY;AAEjD,SAAO;AACLC,IAAAA,MAAM,EAAEF,QADH;AAELG,IAAAA,QAAQ,EAAEL,WAFL;AAGLC,IAAAA,KAAK,EAALA,KAHK;AAILE,IAAAA,GAAG,EAAHA;AAJK,GAAP;AAMD,CARE;;AASH,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAC9C,SAAOvB,QAAQ,CAACwB,IAAT,GAAgBF,kBAAhB,CAAmC,UAACP,IAAD,EAAU;AAClD,QAAMU,cAAc,GAAGV,IAAI,GAAGD,6BAA6B,CAACC,IAAD,CAAhC,GAAyC,IAApE;AACAQ,IAAAA,QAAQ,CAACE,cAAD,CAAR;AACD,GAHM,CAAP;AAID,CALM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,MAAMC,cAAc,GAAG,IAAI3B,QAAQ,CAACwB,IAAT,CAAcI,kBAAlB,EAAvB;AACA,SAAO5B,QAAQ,CAACwB,IAAT,GAAgBK,eAAhB,CAAgCF,cAAhC,CAAP;AACD,CAHM;AAMP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,OAAoC;AAAA,MAAlCV,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BD,GAA0B,QAA1BA,GAA0B;AAAA,MAArBY,OAAqB,QAArBA,OAAqB;AAAA,MAAZV,QAAY,QAAZA,QAAY;AAC1DW,EAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ,EAAoBD,GAApB,EAAyBY,OAAzB,EAAkCV,QAAlC;AACA,SAAOT,EAAE,CAACsB,UAAH,CAAc,QAAd,EACNC,GADM,CACF;AAACf,IAAAA,MAAM,EAANA,MAAD;AACDD,IAAAA,GAAG,EAAHA,GADC;AAEDY,IAAAA,OAAO,EAAPA,OAFC;AAGDV,IAAAA,QAAQ,EAARA,QAHC;AAIDe,IAAAA,SAAS,EAAEpC,QAAQ,CAACa,SAAT,CAAmBwB,SAAnB,CAA6BC,QAA7B,CAAsC,IAAIC,IAAJ,EAAtC,CAJV;AAKDC,IAAAA,SAAS,EAAC,CALT;AAMDC,IAAAA,WAAW,EAAC;AANX,GADE,EAQFC,IARE,CAQG,UAAAC,GAAG;AAAA,WAAEX,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAF;AAAA,GARN,WAQ8C,UAAAW,GAAG;AAAA,WAAEZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAAF;AAAA,GARjD,CAAP;AASD,CAXM","sourcesContent":["import * as firebase from \"firebase\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDSLjDcA6IfXh7o9xLaSYNT6XH08euolP8\",\n    authDomain: \"react-f137b.firebaseapp.com\",\n    databaseURL: \"https://react-f137b.firebaseio.com\",\n    projectId: \"react-f137b\",\n    storageBucket: \"react-f137b.appspot.com\",\n    messagingSenderId: \"1087052118047\",\n    appId: \"1:1087052118047:web:c80e68ce39b19a1c3bbd2a\"\n}\n \n\n!firebase.apps.length && firebase.initializeApp(firebaseConfig)//verify \nconst db = firebase.firestore();\n   const mapUserFromFirebaseAuthToUser = (user) => {\n  const { displayName, email, photoURL,uid } = user\n  return {\n    avatar: photoURL,\n    username: displayName,\n    email,\n    uid\n  }\n}\nexport const onAuthStateChanged = (onChange) => {\n  return firebase.auth().onAuthStateChanged((user) => {\n    const normalizedUser = user ? mapUserFromFirebaseAuthToUser(user) : null\n    onChange(normalizedUser)\n  })\n}\n\nexport const loginWithGitHub = () => {\n  const githubProvider = new firebase.auth.GithubAuthProvider()\n  return firebase.auth().signInWithPopup(githubProvider)\n}\n\n\nexport const addDevid = ({avatar ,uid, message, username})=>{\n  console.log(avatar, uid, message, username)\n  return db.collection('devits')\n  .add({avatar,\n      uid,\n      message,\n      username,\n      createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n      likeCount:0,\n      sharedCount:0\n    }).then(res=>console.log(\"documento saved\")).catch(err=>console.log(err))\n}\n"]},"metadata":{},"sourceType":"module"}