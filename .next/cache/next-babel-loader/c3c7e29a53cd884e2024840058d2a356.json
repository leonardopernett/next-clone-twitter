{"ast":null,"code":"import * as firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSLjDcA6IfXh7o9xLaSYNT6XH08euolP8\",\n  authDomain: \"react-f137b.firebaseapp.com\",\n  projectId: \"react-f137b\",\n  storageBucket: \"react-f137b.appspot.com\",\n  messagingSenderId: \"1087052118047\",\n  appId: \"1:1087052118047:web:c80e68ce39b19a1c3bbd2a\",\n  databaseURL: 'https://react-f137b.firebaseio.com'\n};\n!firebase.apps.length && firebase.initializeApp(firebaseConfig); //verify \n\nconst db = firebase.firestore();\n\nconst mapUserFromFirebaseAuthToUser = user => {\n  const {\n    displayName,\n    email,\n    photoURL,\n    uid\n  } = user;\n  return {\n    avatar: photoURL,\n    username: displayName,\n    email,\n    uid\n  };\n};\n\nexport const onAuthStateChanged = onChange => {\n  return firebase.auth().onAuthStateChanged(user => {\n    const normalizedUser = user ? mapUserFromFirebaseAuthToUser(user) : null;\n    onChange(normalizedUser);\n  });\n};\nexport const loginWithGitHub = () => {\n  const githubProvider = new firebase.auth.GithubAuthProvider();\n  return firebase.auth().signInWithPopup(githubProvider);\n};\nexport const addDevit = ({\n  avatar,\n  uid,\n  message,\n  username\n}) => {\n  return db.collection('devits').add({\n    avatar,\n    uid,\n    message,\n    username,\n    createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n    likeCount: 0,\n    sharedCount: 0\n  });\n};","map":{"version":3,"sources":["/home/lnardev/Documentos/devter/firebase/client.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","apps","length","initializeApp","db","firestore","mapUserFromFirebaseAuthToUser","user","displayName","email","photoURL","uid","avatar","username","onAuthStateChanged","onChange","auth","normalizedUser","loginWithGitHub","githubProvider","GithubAuthProvider","signInWithPopup","addDevit","message","collection","add","createdAt","Timestamp","fromDate","Date","likeCount","sharedCount"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,SAAS,EAAE,aAHQ;AAInBC,EAAAA,aAAa,EAAE,yBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,eALA;AAMnBC,EAAAA,KAAK,EAAE,4CANY;AAOnBC,EAAAA,WAAW,EAAC;AAPO,CAAvB;AAWA,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAf,IAAyBV,QAAQ,CAACW,aAAT,CAAuBV,cAAvB,CAAzB,C,CAA+D;;AAC/D,MAAMW,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;;AACG,MAAMC,6BAA6B,GAAIC,IAAD,IAAU;AACjD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAA+BC,IAAAA;AAA/B,MAAuCJ,IAA7C;AACA,SAAO;AACLK,IAAAA,MAAM,EAAEF,QADH;AAELG,IAAAA,QAAQ,EAAEL,WAFL;AAGLC,IAAAA,KAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CARE;;AASH,OAAO,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AAC9C,SAAOvB,QAAQ,CAACwB,IAAT,GAAgBF,kBAAhB,CAAoCP,IAAD,IAAU;AAClD,UAAMU,cAAc,GAAGV,IAAI,GAAGD,6BAA6B,CAACC,IAAD,CAAhC,GAAyC,IAApE;AACAQ,IAAAA,QAAQ,CAACE,cAAD,CAAR;AACD,GAHM,CAAP;AAID,CALM;AAOP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMC,cAAc,GAAG,IAAI3B,QAAQ,CAACwB,IAAT,CAAcI,kBAAlB,EAAvB;AACA,SAAO5B,QAAQ,CAACwB,IAAT,GAAgBK,eAAhB,CAAgCF,cAAhC,CAAP;AACD,CAHM;AAMP,OAAO,MAAMG,QAAQ,GAAG,CAAC;AAACV,EAAAA,MAAD;AAASD,EAAAA,GAAT;AAAcY,EAAAA,OAAd;AAAuBV,EAAAA;AAAvB,CAAD,KAAoC;AAC1D,SAAOT,EAAE,CAACoB,UAAH,CAAc,QAAd,EACNC,GADM,CACF;AAACb,IAAAA,MAAD;AACDD,IAAAA,GADC;AAEDY,IAAAA,OAFC;AAGDV,IAAAA,QAHC;AAIDa,IAAAA,SAAS,EAAElC,QAAQ,CAACa,SAAT,CAAmBsB,SAAnB,CAA6BC,QAA7B,CAAsC,IAAIC,IAAJ,EAAtC,CAJV;AAKDC,IAAAA,SAAS,EAAC,CALT;AAMDC,IAAAA,WAAW,EAAC;AANX,GADE,CAAP;AASD,CAVM","sourcesContent":["import * as firebase from \"firebase\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDSLjDcA6IfXh7o9xLaSYNT6XH08euolP8\",\n    authDomain: \"react-f137b.firebaseapp.com\",\n    projectId: \"react-f137b\",\n    storageBucket: \"react-f137b.appspot.com\",\n    messagingSenderId: \"1087052118047\",\n    appId: \"1:1087052118047:web:c80e68ce39b19a1c3bbd2a\",\n    databaseURL:'https://react-f137b.firebaseio.com'\n}\n \n\n!firebase.apps.length && firebase.initializeApp(firebaseConfig)//verify \nconst db = firebase.firestore();\n   const mapUserFromFirebaseAuthToUser = (user) => {\n  const { displayName, email, photoURL,uid } = user\n  return {\n    avatar: photoURL,\n    username: displayName,\n    email,\n    uid\n  }\n}\nexport const onAuthStateChanged = (onChange) => {\n  return firebase.auth().onAuthStateChanged((user) => {\n    const normalizedUser = user ? mapUserFromFirebaseAuthToUser(user) : null\n    onChange(normalizedUser)\n  })\n}\n\nexport const loginWithGitHub = () => {\n  const githubProvider = new firebase.auth.GithubAuthProvider()\n  return firebase.auth().signInWithPopup(githubProvider)\n}\n\n\nexport const addDevit = ({avatar ,uid, message, username})=>{\n  return db.collection('devits')\n  .add({avatar,\n      uid,\n      message,\n      username,\n      createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n      likeCount:0,\n      sharedCount:0\n    })\n}\n"]},"metadata":{},"sourceType":"module"}